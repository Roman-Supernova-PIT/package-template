[project]
name = "{{ cookiecutter.module_name }}"
description = "{{ cookiecutter.short_description }}"
requires-python = ">={{ cookiecutter.minimum_python_version }}"
dynamic = ["version"]
authors = [{ name = "Roman Supernova PIT"}]
{% if cookiecutter.author_name and cookiecutter.author_email %}
maintainers = [
 {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"}
 ]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python"
]
dependencies = [
  "towncrier",
  "setuptools_scm",
  "cruft",
  {% if cookiecutter.install_requires %}
  "{{ cookiecutter.install_requires }}",
  {% endif %}
]
license-files = ["LICENSE"]
{% elif cookiecutter.author_name %}
    maintainer = [{ name = "{{ cookiecutter.author_name }}"}]
{% endif %}

[project.readme]
file = "README.rst"
content-type = "text/x-rst"



{% if cookiecutter.include_example_code == 'y' %}
[project.scripts]
package_template_example = "{{ cookiecutter.module_name }}.example_mod:main"
{% endif %}

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "matplotlib",
    "sphinx",
    "tomli",
    "graphviz"
]

{% if cookiecutter.project_url %}
[project.urls]
repository = "{{ cookiecutter.project_url }}"
{% endif %}


[build-system]
requires = [
  "setuptools>=62.1",
  "setuptools_scm[tomli]>=6.2",
  "wheel",
  "numpy>=1.26",
{% if cookiecutter.use_compiled_extensions == 'y' %}
  "extension-helpers",
  "cython",
{% endif %}
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
namespaces = false
include = [
"{{ cookiecutter.module_name }}*"
]

[tool.setuptools_scm]
# can be empty if no extra settings are needed, presence enables setuptools-scm
version_file = "{{ cookiecutter.module_name }}/_version.py"

[tool.pytest.ini_options]
testpaths = [
  "{{ cookiecutter.module_name }}",
  "docs",
]
doctest_plus = "enabled"
doctest_rst = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"

[tool.coverage.run]
omit = [
 "{{ cookiecutter.module_name }}/_{{ cookiecutter._parent_project }}_init*",
 "{{ cookiecutter.module_name }}/conftest.py",
 "{{ cookiecutter.module_name }}/*setup_package*",
 "{{ cookiecutter.module_name }}/tests/*",
 "{{ cookiecutter.module_name }}/*/tests/*",
 "{{ cookiecutter.module_name }}/extern/*",
 "{{ cookiecutter.module_name }}/_version*",
 "*/{{ cookiecutter.module_name }}/_{{ cookiecutter._parent_project }}_init*",
 "*/{{ cookiecutter.module_name }}/conftest.py",
 "*/{{ cookiecutter.module_name }}/*setup_package*",
 "*/{{ cookiecutter.module_name }}/tests/*",
 "*/{{ cookiecutter.module_name }}/*/tests/*",
 "*/{{ cookiecutter.module_name }}/extern/*",
 "*/{{ cookiecutter.module_name }}/_version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]

[tool.towncrier]
# Where you want your news files to come out, filename=`NEWS.rst` is the default.
# This can be .rst or .md, towncrier's default template works with both.
filename = "CHANGES.rst"
directory = "changes"
package = "{{ cookiecutter.package_name }}"
package_dir = "{{ cookiecutter.module_name }}"
title_format = "{version} ({project_date})"
ignore = [".gitkeep"]
wrap = true
issue_format = "`#{issue} <https://github.com/Roman-Supernova-PIT/{{ cookiecutter.package_name }}/issues/{issue}>`_"

[[tool.towncrier.type]]
directory = "/"
name = "General"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "{{ cookiecutter.module_name }}"
name = "{{ cookiecutter.module_name }}"
showcontent = true


